<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="cbdbb1cd-4463-4744-a9b4-a368dec453f4" name="변경" comment="save : N과 M (8)&#10;&#10;- Stack을 이용하여 원하는 동작을 이뤄내었으나 끝 인덱스가 잘 처리되지 않는 상태임&#10;ex) 6C3 케이스에서 3,4,5를 선택하면 끝나버림. 5,5,5 까지 가야함">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/Main.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/Main.kt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/kotlin/week3/NM8.kt" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/kotlin/week3/NM8.kt" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Kotlin Interface" />
        <option value="Kotlin Object" />
        <option value="Kotlin Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$/.." value="baek/1504" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="useMavenConfig" value="true" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectId" id="2L35vEEkYyVFG8RODMkeTKQRnRN" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="Main" type="JetRunConfigurationType">
      <option name="MAIN_CLASS_NAME" value="MainKt" />
      <module name="consoleApp" />
      <shortenClasspath name="NONE" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="애플리케이션 수준" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="디폴트 작업">
      <changelist id="cbdbb1cd-4463-4744-a9b4-a368dec453f4" name="변경" comment="" />
      <created>1675087155641</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1675087155641</updated>
    </task>
    <task id="LOCAL-00001" summary="submit : 거짓말 ver 1&#10;&#10;- 진실을 아는 사람이 있는 자리에서는 진실을 말해야한다.&#10;- 따라서 진실을 아는 사람과 같은 파티장에 있는 사람도 진실을 알게된다.&#10;- 진실을 알게된 사람을 모두 찾은 다음 거짓말 할 수 있는 파티장을 찾아야한다.">
      <created>1675153401041</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1675153401041</updated>
    </task>
    <task id="LOCAL-00002" summary="pass : RGB거리 ver1&#10;&#10;- 각 집을 R,G,B 세가지 색깔로 칠할 수 있는데, 그 비용이 모두 다르다.&#10;- 이웃집과 색이 같지 않아야 할 때, 모든 집을 칠하는 최소 비용을 찾아라.&#10;- Brute force로 하면 O(2^n)이 된다.&#10;- 특정 집, 특정 색의 비용이 상대적으로 매우 클 수 있으므로 Greedy를 사용할 수 없다.&#10;- R_n + min(G_n-1, B_n-1),&#10;G_n + min(R_n-1, B_n-1),&#10;B_n + min(R_n-1, G_n-1) 중 최소값을 반환한다.">
      <created>1675171094554</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1675171094554</updated>
    </task>
    <task id="LOCAL-00003" summary="feat : Parser.kt에 배열 처리 추가">
      <created>1675182680803</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1675182680803</updated>
    </task>
    <task id="LOCAL-00004" summary="feat : Parser의 함수를 최상위로 올림">
      <created>1675307685440</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1675307685440</updated>
    </task>
    <task id="LOCAL-00005" summary="fix : Parser 참조 수정">
      <created>1675307876417</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1675307876417</updated>
    </task>
    <task id="LOCAL-00006" summary="submit : 특정한 최단경로 ver 1&#10;&#10;- 경유지 2곳을 들리는데에 2!가지의 경우의 수가 있으므로 각 거리를 계산해서 둘 중 최소값을 반환하도록 했다.&#10;- 각 경로의 길이를 계산하는 데에는 다익스트라 알고리즘을 적용했다.&#10;- 한번 계산한 경로는 저장해서 두번 연산하지 않도록 했다.">
      <created>1676094104674</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1676094104674</updated>
    </task>
    <task id="LOCAL-00007" summary="submit : 특정한 최단경로 ver 2&#10;&#10;- main에서도 실행되도록 상수를 private val로 바꿨다.&#10;- 쓸데없이 최적화시킨다고 BFS 방식을 적용한게 문제였나 의심이 든다.">
      <created>1676159305587</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1676159305587</updated>
    </task>
    <task id="LOCAL-00008" summary="submit : 특정한 최단경로 ver 3&#10;&#10;- 모든 쌍을 검사했는데도 안된다">
      <created>1676288795762</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1676288795762</updated>
    </task>
    <task id="LOCAL-00009" summary="save : N과 M (8)&#10;&#10;- 현재로서는 끝 인덱스 두개만 바꿀수있는 상태">
      <created>1676308366208</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1676308366208</updated>
    </task>
    <task id="LOCAL-00010" summary="save : N과 M (8)&#10;&#10;- Stack을 이용하여 원하는 동작을 이뤄내었으나 끝 인덱스가 잘 처리되지 않는 상태임&#10;ex) 6C3 케이스에서 3,4,5를 선택하면 끝나버림. 5,5,5 까지 가야함">
      <created>1676310250041</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1676310250041</updated>
    </task>
    <option name="localTasksCounter" value="11" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="submit : 거짓말 ver 1&#10;&#10;- 진실을 아는 사람이 있는 자리에서는 진실을 말해야한다.&#10;- 따라서 진실을 아는 사람과 같은 파티장에 있는 사람도 진실을 알게된다.&#10;- 진실을 알게된 사람을 모두 찾은 다음 거짓말 할 수 있는 파티장을 찾아야한다." />
    <MESSAGE value="pass : RGB거리 ver1&#10;&#10;- 각 집을 R,G,B 세가지 색깔로 칠할 수 있는데, 그 비용이 모두 다르다.&#10;- 이웃집과 색이 같지 않아야 할 때, 모든 집을 칠하는 최소 비용을 찾아라.&#10;- Brute force로 하면 O(2^n)이 된다.&#10;- 특정 집, 특정 색의 비용이 상대적으로 매우 클 수 있으므로 Greedy를 사용할 수 없다.&#10;- R_n + min(G_n-1, B_n-1),&#10;G_n + min(R_n-1, B_n-1),&#10;B_n + min(R_n-1, G_n-1) 중 최소값을 반환한다." />
    <MESSAGE value="feat : Parser.kt에 배열 처리 추가" />
    <MESSAGE value="feat : Parser의 함수를 최상위로 올림" />
    <MESSAGE value="fix : Parser 참조 수정" />
    <MESSAGE value="submit : 특정한 최단경로 ver 1&#10;&#10;- 경유지 2곳을 들리는데에 2!가지의 경우의 수가 있으므로 각 거리를 계산해서 둘 중 최소값을 반환하도록 했다.&#10;- 각 경로의 길이를 계산하는 데에는 다익스트라 알고리즘을 적용했다.&#10;- 한번 계산한 경로는 저장해서 두번 연산하지 않도록 했다." />
    <MESSAGE value="feat : FloydWarshall 구현 연습&#10;&#10;- 다익스트라와 비슷한 전략으로 접근할 수 있다.&#10;- 다만 탐색 없이 for loop 세개로 돌린다." />
    <MESSAGE value="submit : 특정한 최단경로 ver 2&#10;&#10;- main에서도 실행되도록 상수를 private val로 바꿨다.&#10;- 쓸데없이 최적화시킨다고 BFS 방식을 적용한게 문제였나 의심이 든다." />
    <MESSAGE value="submit : 특정한 최단경로 ver 3&#10;&#10;- 모든 쌍을 검사했는데도 안된다" />
    <MESSAGE value="save : N과 M (8)&#10;&#10;- 현재로서는 끝 인덱스 두개만 바꿀수있는 상태" />
    <MESSAGE value="save : N과 M (8)&#10;&#10;- Stack을 이용하여 원하는 동작을 이뤄내었으나 끝 인덱스가 잘 처리되지 않는 상태임&#10;ex) 6C3 케이스에서 3,4,5를 선택하면 끝나버림. 5,5,5 까지 가야함" />
    <option name="LAST_COMMIT_MESSAGE" value="save : N과 M (8)&#10;&#10;- Stack을 이용하여 원하는 동작을 이뤄내었으나 끝 인덱스가 잘 처리되지 않는 상태임&#10;ex) 6C3 케이스에서 3,4,5를 선택하면 끝나버림. 5,5,5 까지 가야함" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="kotlin-line">
          <url>file://$PROJECT_DIR$/src/main/kotlin/week2/SpecificPath.kt</url>
          <line>116</line>
          <option name="timeStamp" value="9" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>